<Activity mc:Ignorable="sap sap2010" x:Class="CreateRaport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_brandStats" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_dt_output" Type="InArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CreateRaport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateRaport" sap:VirtualizedContainerService.HintSize="756.6666666666666,2377.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="var_dt_output" />
      <Variable x:TypeArguments="x:String" Name="var_htmlLastVersion" />
      <Variable x:TypeArguments="x:String" Name="var_htmlString" />
      <Variable x:TypeArguments="x:Double" Name="var_avgPrice" />
      <Variable x:TypeArguments="x:Double" Name="var_maxPrice" />
      <Variable x:TypeArguments="x:Double" Name="var_minPrice" />
      <Variable x:TypeArguments="x:Double" Name="var_overallDiscount" />
      <Variable x:TypeArguments="sd:DataRow" Name="var_topBrandDataRow" />
      <Variable x:TypeArguments="x:Double" Name="var_topBrandDiscount" />
      <Variable x:TypeArguments="x:String" Name="var_topBrandName" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap:VirtualizedContainerService.HintSize="640,2586.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="606,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[var_dt_output]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[in_dt_output]</InArgument>
        </Assign.Value>
      </Assign>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="606,2409.3333333333335" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="572,2299.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="538,2239.3333333333335" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" SensitivityOperation="None" WorkbookPath="Output\AboutYou_ProductsPriceOverview.xlsx">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="504,1896" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="470,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[in_dt_output.Rows.Count.ToString()]" />
                      <ueab:WriteRangeX Append="True" Destination="[Excel.Sheet(&quot;Products Price Overview&quot;)]" DisplayName="Write DataTable to Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="470,196.66666666666666" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[in_dt_output]" />
                      <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Discount" DataTable="[in_dt_output]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="470,223.33333333333334" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dt_output]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="470,352" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,168" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[CurrentRow("Discount")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[(CDbl(CurrentRow("Previous Price")) - CDbl(CurrentRow("Current Price"))) / CDbl(CurrentRow("Previous Price")) * 100]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="' Create a new DataTable&#xA;dtResult.Columns.Add(&quot;Brand&quot;, GetType(String))&#xA;dtResult.Columns.Add(&quot;AvgPrice&quot;, GetType(Double))&#xA;dtResult.Columns.Add(&quot;AvgDiscount&quot;, GetType(Double))&#xA;&#xA;' Group and calculate&#xA;Dim query = From row In dt.AsEnumerable()&#xA;            Group row By brand = row(&quot;Brand&quot;).ToString Into grp = Group&#xA;            Let avgPricePerBrand = grp.Average(Function(r) CDbl(r(&quot;Current Price&quot;)))&#xA;            Let avgDiscountPerBrand = grp.Average(Function(r) (CDbl(r(&quot;Previous Price&quot;)) - CDbl(r(&quot;Current Price&quot;))) / CDbl(r(&quot;Previous Price&quot;)) * 100)&#xA;            Select New With {&#xA;                .Brand = brand,&#xA;                .AvgPrice = avgPricePerBrand,&#xA;                .AvgDiscount = avgDiscountPerBrand&#xA;            }&#xA;&#xA;' Add rows to dtResult&#xA;For Each item In query&#xA;    Dim newRow = dtResult.NewRow()&#xA;    newRow(&quot;Brand&quot;) = item.Brand&#xA;    newRow(&quot;AvgPrice&quot;) = item.AvgPrice&#xA;    newRow(&quot;AvgDiscount&quot;) = item.AvgDiscount&#xA;    dtResult.Rows.Add(newRow)&#xA;Next&#xA;&#xA;' To get top brand row by AvgDiscount&#xA;topBrandRow = dtResult.AsEnumerable().OrderByDescending(Function(r) r.Field(Of Double)(&quot;AvgDiscount&quot;)).First()&#xA;&#xA;' Example: get brand name and discount of top brand&#xA;topBrandName = topBrandRow.Field(Of String)(&quot;Brand&quot;)&#xA;topBrandDiscount = topBrandRow.Field(Of Double)(&quot;AvgDiscount&quot;)&#xA;&#xA;' Calculate general statistics&#xA;overallDiscount = Math.Round(dt.AsEnumerable().Average(Function(r) CDbl(r(&quot;Discount&quot;))), 2)&#xA;&#xA;minPrice = dt.AsEnumerable().Min(Function(r) CDbl(r(&quot;Current Price&quot;)))&#xA;maxPrice = dt.AsEnumerable().Max(Function(r) CDbl(r(&quot;Current Price&quot;)))&#xA;avgPrice = dt.AsEnumerable().Average(Function(r) CDbl(r(&quot;Current Price&quot;)))&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="470,197.33333333333334" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                        <ui:InvokeCode.Arguments>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="dtResult">[out_brandStats]</OutArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="dt">[in_dt_output]</InArgument>
                          <OutArgument x:TypeArguments="sd:DataRow" x:Key="topBrandRow">[var_topBrandDataRow]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="topBrandName">[var_topBrandName]</OutArgument>
                          <OutArgument x:TypeArguments="x:Double" x:Key="topBrandDiscount">[var_topBrandDiscount]</OutArgument>
                          <OutArgument x:TypeArguments="x:Double" x:Key="overallDiscount">[var_overallDiscount]</OutArgument>
                          <OutArgument x:TypeArguments="x:Double" x:Key="minPrice">[var_minPrice]</OutArgument>
                          <OutArgument x:TypeArguments="x:Double" x:Key="maxPrice">[var_maxPrice]</OutArgument>
                          <OutArgument x:TypeArguments="x:Double" x:Key="avgPrice">[var_avgPrice]</OutArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                      <ui:ReadTextFile File="{x:Null}" Content="[var_htmlString]" DisplayName="Read Text File" FileName="reportTemplate.html" sap:VirtualizedContainerService.HintSize="470,114" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                      <Assign sap:VirtualizedContainerService.HintSize="470,118" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[var_htmlLastVersion]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[var_htmlString.Replace("{{TopBrand}}", var_topBrandName) _
                         .Replace("{{AvgDiscount}}", var_topBrandDiscount.ToString("0.00")) _
                         .Replace("{{MinPrice}}", var_minPrice.ToString("0.00")) _
                         .Replace("{{MaxPrice}}", var_maxPrice.ToString("0.00")) _
                         .Replace("{{AvgPrice}}", var_avgPrice.ToString("0.00")) _
                         .Replace("{{OverallDiscount}}", var_overallDiscount.ToString("0.00"))]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <umam:SendMailConnections ArgumentAttachmentPaths="{x:Null}" AttachmentList="{x:Null}" ConnectionAccountName="{x:Null}" MailboxBackup="{x:Reference __ReferenceID0}" AttachmentInputMode="Existing" AttachmentPaths="{x:Null}" Attachments="{x:Null}" AuthScopesInvalid="False" Bcc="{x:Null}" Body="[var_htmlLastVersion]" Cc="{x:Null}" ConnectionId="2fab7c90-9d95-47f2-8203-a2ee5dfa0615" ContinueOnError="{x:Null}" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="470,458" sap2010:WorkflowViewState.IdRef="SendMailConnections_1" Importance="Normal" InputType="HTML" Mailbox="{x:Null}" ReplyTo="{x:Null}" SaveAsDraft="False" SingleAttachment="{x:Null}" Subject="Report of Competitors in the Market" TextBody="{x:Null}" To="[New String(){&quot;&quot;&quot;bernaural123@gmail.com&quot;&quot;&quot;}]" UseConnectionService="True" UseSharedMailbox="False">
                        <umam:SendMailConnections.AttachmentsBackup>
                          <usau:BackupSlot x:TypeArguments="umame:AttachmentInputMode" StoredValue="Existing">
                            <usau:BackupSlot.BackupValues>
                              <scg:Dictionary x:TypeArguments="umame:AttachmentInputMode, scg:List(x:Object)" />
                            </usau:BackupSlot.BackupValues>
                          </usau:BackupSlot>
                        </umam:SendMailConnections.AttachmentsBackup>
                        <umam:SendMailConnections.InputTypeBackup>
                          <usau:BackupSlot x:TypeArguments="umame:BodyInputType" StoredValue="HTML">
                            <usau:BackupSlot.BackupValues>
                              <scg:Dictionary x:TypeArguments="umame:BodyInputType, scg:List(x:Object)" />
                            </usau:BackupSlot.BackupValues>
                          </usau:BackupSlot>
                        </umam:SendMailConnections.InputTypeBackup>
                        <umam:SendMailConnections.MailboxArg>
                          <umamm:MailboxArgument SharedMailbox="{x:Null}" UseSharedMailbox="False">
                            <umamm:MailboxArgument.Backup>
                              <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" x:Name="__ReferenceID0" StoredValue="NoMailbox">
                                <usau:BackupSlot.BackupValues>
                                  <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
                                </usau:BackupSlot.BackupValues>
                              </usau:BackupSlot>
                            </umamm:MailboxArgument.Backup>
                          </umamm:MailboxArgument>
                        </umam:SendMailConnections.MailboxArg>
                      </umam:SendMailConnections>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
      </ueab:ExcelProcessScopeX>
    </Sequence>
  </Sequence>
</Activity>